// Code generated by MockGen. DO NOT EDIT.
// Source: .\search_api.go

// Package mock_restaurant_search is a generated GoMock package.
package mock_restaurant_search

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/jphacks/B_2121_server/models"
	restaurant_search "github.com/jphacks/B_2121_server/restaurant_search"
)

// MockSearchApi is a mock of SearchApi interface.
type MockSearchApi struct {
	ctrl     *gomock.Controller
	recorder *MockSearchApiMockRecorder
}

// MockSearchApiMockRecorder is the mock recorder for MockSearchApi.
type MockSearchApiMockRecorder struct {
	mock *MockSearchApi
}

// NewMockSearchApi creates a new mock instance.
func NewMockSearchApi(ctrl *gomock.Controller) *MockSearchApi {
	mock := &MockSearchApi{ctrl: ctrl}
	mock.recorder = &MockSearchApiMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSearchApi) EXPECT() *MockSearchApiMockRecorder {
	return m.recorder
}

// Search mocks base method.
func (m *MockSearchApi) Search(keyword string, location models.Location, count int) (*[]restaurant_search.Restaurant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Search", keyword, location, count)
	ret0, _ := ret[0].(*[]restaurant_search.Restaurant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Search indicates an expected call of Search.
func (mr *MockSearchApiMockRecorder) Search(keyword, location, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Search", reflect.TypeOf((*MockSearchApi)(nil).Search), keyword, location, count)
}

// SearchNext mocks base method.
func (m *MockSearchApi) SearchNext(keyword string, location models.Location, startCount, count int) (*[]restaurant_search.Restaurant, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchNext", keyword, location, startCount, count)
	ret0, _ := ret[0].(*[]restaurant_search.Restaurant)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchNext indicates an expected call of SearchNext.
func (mr *MockSearchApiMockRecorder) SearchNext(keyword, location, startCount, count interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchNext", reflect.TypeOf((*MockSearchApi)(nil).SearchNext), keyword, location, startCount, count)
}
